generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Graffiti {
  id          Int                  @id @default(autoincrement())
  name        String               @unique
  description String
  location    String
  createdAt   DateTime             @default(now())
  categories  CategoryToGraffiti[]
  comment     Comment[]
  tags        TagToGraffiti[]

  authorId    Int
  author      User                 @relation(fields: [authorId], references: [id])
  artists     ArtistToGraffiti[]
  //comments         Comment[]
}

model Category {
  id        Int                  @id @default(autoincrement())
  name      String               @unique
  graffitis CategoryToGraffiti[]
}

model CategoryToGraffiti {
  id         Int      @id @default(autoincrement())
  graffiti   Graffiti @relation(fields: [graffitiId], references: [id])
  graffitiId Int
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
}

model Comment {
  id         Int      @id @default(autoincrement())
  body       String
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  graffiti   Graffiti @relation(fields: [graffitiId], references: [id])
  graffitiId Int
}

model Email {
  id       Int      @id @default(autoincrement())
  dateSent DateTime @default(now())
  subject  String   
  body     String
  status   String 
}

model EmailTemplate {
  name     String 
  id       Int      @id @default(autoincrement())
  subject  String   
  body     String 
}

model Tag {
  id          Int             @id @default(autoincrement())
  name        String          @unique
  description String
  graffitis   TagToGraffiti[]
}

model TagToGraffiti {
  id         Int      @id @default(autoincrement())
  graffiti   Graffiti @relation(fields: [graffitiId], references: [id])
  graffitiId Int
  tag        Tag      @relation(fields: [tagId], references: [id])
  tagId      Int
}
model User {
  id       Int        @id @default(autoincrement())
  email    String     @unique
  password String
  name     String
  lastname String
  username String     @unique
  posts    Graffiti[]
  comment  Comment[]
}

model Artist {
  id            Int                @id @default(autoincrement())
  name          String             @unique
  surname       String
  graffitis ArtistToGraffiti[]
}

model ArtistToGraffiti {
  id         Int      @id @default(autoincrement())
  graffiti   Graffiti @relation(fields: [graffitiId], references: [id])
  graffitiId Int
  artist     Artist   @relation(fields: [artistId], references: [id])
  artistId   Int
}
